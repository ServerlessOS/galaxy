syntax = "proto3";
option go_package = "./;proto";
package gateway_rpc;

service Gateway {
  rpc UpdateGatewayList(UpdateListReq)returns(UpdateListResp){}
  rpc UpdateDispatcherList(UpdateListReq)returns(UpdateListResp){}
  rpc UpdateFuncManagerList(UpdateListReq)returns(UpdateListResp){}
  rpc Register(RegisterReq)returns(RegisterResp){}
}
message UpdateListReq {
  enum OperationType {
    APPEND = 0;
    REDUCE = 1;
    OVERRIDE = 2;
  }

  OperationType type = 1; // 操作类型 追加/减少/覆盖
  map<string, string> gatewayList = 2;; // 列表name/address
}
message RegisterReq{
  enum RegisterType {
    gateway = 0;
    funcManager = 1;
    dispatcher  = 3;
    scheduler  = 4;
    node  = 5;
  }
  RegisterType type = 1;
  string name = 2;
  string address = 3;//当模块联系gateway时，地址可以为空也可以存在，当gateway转发顶层控制器时，自动填充地址
}
message RegisterResp{
  int64 statusCode = 1;
  string customInformation = 2; //不同的注册可以返回不同的信息
}
message UpdateListResp{
  int64 statusCode = 1;
  string description = 2;
}